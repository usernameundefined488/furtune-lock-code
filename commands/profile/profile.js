const Discord = require('discord.js-light');
const moment = require('moment');
/**
 *
 *
 * @param {import("discord.js-light").Client} bot
 * @param {import("discord.js-light").Message} message
 * @param {String[]} args
 */

exports.run = async (bot, message, args) => {
    const member = message.mentions.members.first() || message.guild.members.cache.get(args[0]) || message.member;
    let userdata = await bot.db.getuser(member.id)
    let exptop = bot.db.prepare(`SELECT * FROM users ORDER BY totalsexp DESC`).all();
    let cointop = bot.db.prepare(`SELECT * FROM users ORDER BY point DESC`).all();
    exptop = (await exptop).findIndex((u)=>u.id==member.id)+1;
    cointop = (await cointop).findIndex((u)=>u.id==member.id)+1;
    let nxtlvlexp = userdata.level * config.expperlvl;

    const embed = new Discord.MessageEmbed()
    .setAuthor(`üìö ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ${member.user.username}`)
    .setThumbnail(member.user.displayAvatarURL())
    .setDescription(`üå∏ __**‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ**__
‚îä ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå : ${exptop}
‚ï∞ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô : ${cointop}

üìã __**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**__ ‚Ü∑
\`\`\`
‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô : ${userdata.name||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡πÄ‡∏û‡∏® : ${userdata.gender||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏Ñ‡∏•‡∏≤‡∏™ : ${userdata.class||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏≠‡∏≤‡∏ä‡∏µ‡∏û : ${userdata.job||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏â‡∏≤‡∏¢‡∏≤ : ${userdata.title||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏Ñ‡∏≥‡∏Ñ‡∏° : ${userdata.quotes||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ${userdata.status||"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î : ${userdata.birthday?moment(userdata.birthday).format("ll"):"‡πÑ‡∏°‡πà‡∏û‡∏ö"}
\`\`\``)
    .setFooter(`üîÆ ‡πÄ‡∏•‡πÄ‡∏ß‡∏•: ${userdata.level} ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå: ${Math.floor(userdata.exp/nxtlvlexp*100)}% ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ: ${userdata.point}`)
    .setColor(config.color);

    message.channel.send(embed)
}
exports.conf = {
    aliases: [],
    delay: 3000
};